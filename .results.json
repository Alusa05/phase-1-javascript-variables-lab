{
  "stats": {
    "suites": 10,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-09T14:56:02.669Z",
    "end": "2025-03-09T14:56:03.247Z",
    "duration": 578
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks when destination is below headquarters",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks when destination is below headquarters",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet when destination is below headquarters",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet when destination is below headquarters",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance travelled in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance travelled in feet",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance travelled in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance travelled in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance when destination is below starting block",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance when destination is below starting block",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "gives customers a free sample",
      "fullTitle": "index.js calculatesFarePrice() gives customers a free sample",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 2 cents per foot for distances between 400 and 2000 feet",
      "fullTitle": "index.js calculatesFarePrice() charges 2 cents per foot for distances between 400 and 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 25 dollars for distances over 2000 feet",
      "fullTitle": "index.js calculatesFarePrice() charges 25 dollars for distances over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js calculatesFarePrice() does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Ok, sounds good.\" for NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" for NYC",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"No go.\" for non-NYC destinations",
      "fullTitle": "index.js ternaryCheckCity() returns \"No go.\" for non-NYC destinations",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Thank you so much.\" for a generous tip",
      "fullTitle": "index.js switchOnCharmFromTip() returns \"Thank you so much.\" for a generous tip",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Thank you.\" for a not-as-generous tip",
      "fullTitle": "index.js switchOnCharmFromTip() returns \"Thank you.\" for a not-as-generous tip",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Bye.\" for anything else",
      "fullTitle": "index.js switchOnCharmFromTip() returns \"Bye.\" for anything else",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [],
  "passes": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks when destination is below headquarters",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks when destination is below headquarters",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet when destination is below headquarters",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet when destination is below headquarters",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance travelled in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance travelled in feet",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance travelled in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance travelled in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance when destination is below starting block",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance when destination is below starting block",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "gives customers a free sample",
      "fullTitle": "index.js calculatesFarePrice() gives customers a free sample",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 2 cents per foot for distances between 400 and 2000 feet",
      "fullTitle": "index.js calculatesFarePrice() charges 2 cents per foot for distances between 400 and 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 25 dollars for distances over 2000 feet",
      "fullTitle": "index.js calculatesFarePrice() charges 25 dollars for distances over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js calculatesFarePrice() does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Ok, sounds good.\" for NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" for NYC",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"No go.\" for non-NYC destinations",
      "fullTitle": "index.js ternaryCheckCity() returns \"No go.\" for non-NYC destinations",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Thank you so much.\" for a generous tip",
      "fullTitle": "index.js switchOnCharmFromTip() returns \"Thank you so much.\" for a generous tip",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Thank you.\" for a not-as-generous tip",
      "fullTitle": "index.js switchOnCharmFromTip() returns \"Thank you.\" for a not-as-generous tip",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Bye.\" for anything else",
      "fullTitle": "index.js switchOnCharmFromTip() returns \"Bye.\" for anything else",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}